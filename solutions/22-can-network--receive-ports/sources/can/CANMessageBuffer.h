//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#pragma once

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#include "CANMessage.h"
#include "software-modes.h"

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class CANMessageBuffer {

//······················································································································
//    Constructor
//······················································································································

  public: CANMessageBuffer (void) ;

//······················································································································
//    Private properties
//······················································································································

  private: CANMessage * mMessageArray ;
  private: uint16_t mBufferSize ;
  private: uint16_t mReadIndex ;
  private: uint16_t mCount ;

//······················································································································
//    Init
//······················································································································

  public: void initWithSize (INIT_MODE_ const uint16_t inBufferSize) ;

//······················································································································
//    Append a value (can raise overflow)
//······················································································································

  public: bool append (SECTION_MODE_ const CANMessage & inMessage) ;

//······················································································································
//    Retrieve a value
//······················································································································

//$section can.message.buffer.remove
  public: bool remove (USER_MODE_ CANMessage & outMessage) asm ("can.message.buffer.remove") ;
  public: bool section_remove (SECTION_MODE_ CANMessage & outMessage) asm ("section.can.message.buffer.remove") ;

//······················································································································
//    No copy
//······················································································································

  private: CANMessageBuffer (const CANMessageBuffer &) = delete ;
  private: CANMessageBuffer & operator = (const CANMessageBuffer &) = delete ;

//······················································································································
} ;

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
