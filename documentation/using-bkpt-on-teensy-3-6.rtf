{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 GillSans;}
{\colortbl;\red255\green255\blue255;\red12\green0\blue194;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid1\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww20040\viewh13540\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl288\slmult1\pardirnatural\partightenfactor0

\f0\fs32 \cf0 Is it possible to use the BKPT instruction as SVC on the \expnd0\expndtw0\kerning0
MK66FX1M0VMD18 that embeds a Cortex-M4 processor \kerning1\expnd0\expndtw0 ? I mean running the BKPT instruction causes the Debug Monitor exception #12.\
\
I've done various unsuccessful trials.\
\
From ARM\'aev7-M Architecture Reference Manual (https://static.docs.arm.com/ddi0403/e/DDI0403E_B_armv7m_arm.pdf) \
\
BKPT instruction (A7.7.17)\
Breakpoint causes a DebugMonitor exception or a debug halt to occur depending on the configuration of the debug support.\
\
First, I have set MON_EN bit of DEMCR register:\
\
\pard\pardeftab720\sl288\slmult1\partightenfactor0

\i \cf0 \expnd0\expndtw0\kerning0
Enable the DebugMonitor exception: \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl288\slmult1\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
0 \'a0DebugMonitor exception disabled. \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	.	}\expnd0\expndtw0\kerning0
1 \'a0DebugMonitor exception enabled. \
If DHCSR.C_DEBUGEN is set to 1, the processor ignores the value of this bit. \
\pard\pardeftab720\sl288\slmult1\partightenfactor0
\cf0 See \cf2 ARMv7-M exception model on page B1-579 \cf0 for more information about the DebugMonitor exception. 
\i0 \
\
By default DHCSR.C_DEBUGEN is set to 1, but it not possible to reset it by writing the 
\i DHCSR
\i0  register\kerning1\expnd0\expndtw0 :\expnd0\expndtw0\kerning0
 
\i The DHCSR is typically accessed by a debugger, through the DAP. Software running on the processor can update all fields in this register, except C_DEBUGEN
\i0 .\
\
From K66 Sub-Family Reference Manual with Addendum, 10.5:\
\pard\pardeftab720\sl440\sa240\partightenfactor0

\i \cf0 It is important to note that these DAP control and status registers are not memory mapped within the system memory map and are only accessible via the Debug Access Port (DAP) using JTAG, cJTAG, or SWD. The MDM-AP is accessible as Debug Access Port 1 with the available registers shown in the table below [table 10.4]. 
\i0 \
\pard\pardeftab720\sl288\slmult1\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl288\slmult1\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
}